import re, sys, sys, os

I_WORD, I_NAME, I_OPTIONS, I_OPCODE, I_CODE = range(5)
primops = []

# Parse out primitive definitions.	
text = open(sys.argv[1], 'rt').read()
# PRIMOP 	LIT8	'( - c)' "Pushes next byte in instruction stream." [hide] { c = CHECK_ERR(memget_char_ip()) console_u_push(c); }
for ln in text.splitlines():
	ln = ln.lstrip()
	if not ln:
		continue
	if ln.startswith('#'):
		continue
	if ln.startswith('IGNORE'):
		break
	if m := re.match(r'''
	  PRIMOP\s*
	  ([^\s]+)\s*		# Word. 
	  '(.*)'\s+			# Stack effect,
	  "(.*)"\s*			# Description.
	  \[([^]]*)\]\s*	# Options.
	  \{(.*)\}\s*		# Code.
	  $					# 
	  ''', ln, re.X):
		word_name = m.group(1)
		c_name = word_name.lower()
		options = m.group(4).split()
		for opt in options:
			if m_opt := re.match(r'n=(.*)$', opt):
				c_name = m_opt.group(1)
		opcode = 'SC_OP_' + c_name.upper()
		code_snippet = [m.group(5).strip()]
		if not code_snippet[0].endswith(';'):
			code_snippet.append(';')
		code_snippet.append(' goto next;')
		code_snippet = "".join(code_snippet)
		primops.append((word_name, c_name, options, opcode, code_snippet, ))
	else:
		print(f"Line `{ln}' not understood.", file=sys.stderr)
		sys.exit()

# Dump info	
print(' '.join([p[I_WORD] for p in primops]))

# Generate definitions.
sc_opcodes = '\n'.join([f'\t{p[I_OPCODE]},  \\' for p in primops])
sc_snippets = '\n'.join([f'\t{p[I_NAME]}: {p[I_CODE]} \\' for p in primops])
sc_jumps = ', '.join([f'&&{p[I_NAME]}' for p in primops])

def hash(w):
	HASH_START, HASH_MULT = 5381, 33 # No basis for these numbers, they just seem to work.
	h = HASH_START;
	for c in w.upper():
		h = ((h * HASH_MULT) & 0xffff) ^ ord(c)
	return h
	
sc_dict = []
prev = 0xffff
for p in primops:
	if 'hide' not in p[I_OPTIONS]:
		entry = [prev&0xff, prev>>8]
		h = hash(p[I_WORD])
		entry += [h&0xff, h>>8]
		entry += [0]		# Flags
		entry += [p[I_OPCODE], 'SC_OP_RET']
		prev = len(sc_dict)
		sc_dict += entry
		#print(prev, entry)
		
f = open(os.path.join(os.path.dirname(sys.argv[1]), 'sconsole.auto.h'), 'wt')
f.write(f'''\
// This file is autogenerated, do not edit.

#define SC_OPCODES \\
{sc_opcodes}

#define SC_JUMPS \\
{sc_jumps}

#define SC_SNIPPETS \\
{sc_snippets}

''')